name: Release

on:
  workflow_dispatch:
    inputs:
      major:
        description: Major version
        required: true
        type: number
      minor:
        description: Minor version
        required: true
        type: number

jobs:
  release:
    name: Release ${{ inputs.major }}.${{ inputs.minor }}
    runs-on: macos-14
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '^15.2'

      - name: Version information
        run: xcrun xcodebuild -version

      - uses: actions/checkout@v4

      - name: Setup configuration
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          {
            echo 'DEVELOPMENT_TEAM = ${{ vars.DEVELOPMENT_TEAM }};'
            echo 'ORGANIZATION_IDENTIFIER = ${{ vars.ORGANIZATION_IDENTIFIER }};'
            echo 'HUMIO_INGEST_TOKEN = ${{ secrets.HUMIO_INGEST_TOKEN }};'
            echo 'HUMIO_DATA_SPACE = ${{ secrets.HUMIO_DATA_SPACE }};'
            echo 'MARKETING_VERSION = ${{ inputs.major }}.${{ inputs.minor }};'
            echo "CURRENT_PROJECT_VERSION = $(gh api repos/${{ github.repository }}/commits?sha=main --paginate | jq length | tr -d \\n);"
            echo "COMMIT = $(git rev-parse --short ${{ github.sha }});"
          } | tee Powercast/Local.xcconfig

      - name: Cache DerivedData
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData/Powercast-*
          key: ${{ runner.os }}-xcode-${{ hashFiles('**/*.pbxproj', '**/swiftpm/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-xcode-

      - name: Setup authentication
        env:
          KEY_BASE64: ${{ secrets.APPSTORE_KEY_P8 }}
        run: |
          mkdir -p ~/.appstoreconnect/private_keys
          echo -n "$KEY_BASE64" | base64 -d > ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APPSTORE_KEY_ID }}.p8
          echo 'KEY_FILE=~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APPSTORE_KEY_ID }}.p8' >> $GITHUB_ENV

      - name: Setup keychain
        env:
          CERTIFICATE_BASE64: ${{ secrets.APPSTORE_CERTIFICATE_P12 }}
          P12_PASSWORD: ${{ secrets.APPSTORE_CERTIFICATE_P12_PASSWORD }}
        run: |
          password=$(head -c 30 /dev/random| base64)
          keychain='${{ runner.temp }}/signing.keychain-db'
          certificate='${{ runner.temp }}/certificate.p12'
          echo -n "$CERTIFICATE_BASE64" | base64 -d > "$certificate"
          security create-keychain -p "$password" "$keychain"
          security set-keychain-settings -lut 21600 "$keychain"
          security unlock-keychain -p "$password" "$keychain"
          security import "$certificate" -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k "$keychain"
          security list-keychain -d user -s "$keychain"
          security find-identity -v

      - name: Build information
        run: xcrun xcodebuild -showBuildSettings

      - name: Build archive
        run: |
          xcodebuild -project Powercast.xcodeproj \
          -archivePath '${{ runner.temp }}/Powercast.xcarchive' \
          -scheme Powercast \
          -configuration Release \
          -sdk iphoneos \
          -destination generic/platform=iOS \
          -parallelizeTargets \
          -allowProvisioningUpdates \
          -authenticationKeyID ${{ secrets.APPSTORE_KEY_ID }} \
          -authenticationKeyIssuerID ${{ secrets.APPSTORE_ISSUER_ID }} \
          -authenticationKeyPath ${{ env.KEY_FILE }} \
          -quiet \
          archive \
          PROVISIONING_PROFILE_SPECIFIER=${{ vars.PROVISIONING_PROFILE }}

      - name: Create ExportOptions.plist
        run: |
          cat <<EOF > ExportOptions.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>teamID</key>
            <string>${{ vars.DEVELOPMENT_TEAM }}</string>
            <key>method</key>
            <string>app-store</string>
            <key>destination</key>
            <string>upload</string>
            <key>uploadSymbols</key>
            <true/>
            <key>signingStyle</key>
            <string>manual</string>
            <key>provisioningProfiles</key>
            <dict>
                <key>${{ vars.ORGANIZATION_IDENTIFIER }}.powercast.app</key>
                <string>${{ vars.PROVISIONING_PROFILE }}</string>
            </dict>
            </dict>
          </plist>
          EOF

      - name: Upload ipa
        if: github.ref == 'refs/heads/main'
        run: |
          xcodebuild -exportArchive \
          -archivePath '${{ runner.temp }}/Powercast.xcarchive' \
          -exportOptionsPlist ExportOptions.plist \
          -authenticationKeyID ${{ secrets.APPSTORE_KEY_ID }} \
          -authenticationKeyIssuerID ${{ secrets.APPSTORE_ISSUER_ID }} \
          -authenticationKeyPath ${{ env.KEY_FILE }}

      - name: Save tag ${{ inputs.major }}.${{ inputs.minor }}
        if: github.ref == 'refs/heads/main'
        run: |
          git tag -d ${{ inputs.major }}.${{ inputs.minor }} 2>/dev/null || true
          git push origin :refs/tags/${{ inputs.major }}.${{ inputs.minor }} 2>/dev/null || true
          git tag ${{ inputs.major }}.${{ inputs.minor }} ${{ github.sha }}
          git push origin ${{ inputs.major }}.${{ inputs.minor }}
